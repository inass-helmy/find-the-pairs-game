{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(watchDeck),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchCard),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, takeLatest, delay, takeEvery } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport * as actionTypes from \"../actions/actionTypes\";\nexport function watchDeck() {\n  return _regeneratorRuntime.wrap(function watchDeck$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(actionTypes.START_GAME, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return put(actions.createDeck());\n\n                  case 2:\n                    _context.next = 4;\n                    return delay(5000);\n\n                  case 4:\n                    _context.next = 6;\n                    return put(actions.hideCards());\n\n                  case 6:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\nexport function watchCard() {\n  return _regeneratorRuntime.wrap(function watchCard$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(actionTypes.SET_MATCHED_CARDS, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n            return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return delay(1000);\n\n                  case 2:\n                    _context3.next = 4;\n                    return put(actions.matchedCards());\n\n                  case 4:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n        case 2:\n          _context5.next = 4;\n          return takeEvery(actionTypes.RESET_CARDS_TIMEOUT, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n            return _regeneratorRuntime.wrap(function _callee3$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return delay(1000);\n\n                  case 2:\n                    _context4.next = 4;\n                    return put(actions.resetCards());\n\n                  case 4:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee3);\n          }));\n\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked2);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return all([watchDeck(), watchCard()]);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/Users/enassamir/Desktop/find-the-pairs-game/src/store/sagas/Deck.js"],"names":["watchDeck","watchCard","rootSaga","all","put","takeLatest","delay","takeEvery","actions","actionTypes","START_GAME","createDeck","hideCards","SET_MATCHED_CARDS","matchedCards","RESET_CARDS_TIMEOUT","resetCards"],"mappings":";;oDAIiBA,S;qDAQAC,S;qDAYQC,Q;;AAxBzB,SAASC,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,EAA+BC,KAA/B,EAAsCC,SAAtC,QAAuD,oBAAvD;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AAEA,OAAO,SAAUT,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMK,UAAU,CAACI,WAAW,CAACC,UAAb,wCAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AACvC,2BAAMN,GAAG,CAACI,OAAO,CAACG,UAAR,EAAD,CAAT;;AADuC;AAAA;AAEvC,2BAAML,KAAK,CAAC,IAAD,CAAX;;AAFuC;AAAA;AAGvC,2BAAMF,GAAG,CAACI,OAAO,CAACI,SAAR,EAAD,CAAT;;AAHuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAzB,EAAhB;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQP,OAAO,SAAUX,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMM,SAAS,CAACE,WAAW,CAACI,iBAAb,wCAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7C,2BAAMP,KAAK,CAAC,IAAD,CAAX;;AAD6C;AAAA;AAE7C,2BAAMF,GAAG,CAACI,OAAO,CAACM,YAAR,EAAD,CAAT;;AAF6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAhC,EAAf;;AADK;AAAA;AAML,iBAAMP,SAAS,CAACE,WAAW,CAACM,mBAAb,wCAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/C,2BAAMT,KAAK,CAAC,IAAD,CAAX;;AAD+C;AAAA;AAE/C,2BAAMF,GAAG,CAACI,OAAO,CAACQ,UAAR,EAAD,CAAT;;AAF+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAlC,EAAf;;AANK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYP,eAAe,SAAUd,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CAACH,SAAS,EAAV,EAAcC,SAAS,EAAvB,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, put, takeLatest, delay, takeEvery } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport * as actionTypes from \"../actions/actionTypes\";\n\nexport function* watchDeck() {\n  yield takeLatest(actionTypes.START_GAME, function* () {\n    yield put(actions.createDeck());\n    yield delay(5000);\n    yield put(actions.hideCards());\n  });\n}\n\nexport function* watchCard() {\n  yield takeEvery(actionTypes.SET_MATCHED_CARDS, function* () {\n    yield delay(1000);\n    yield put(actions.matchedCards());\n  });\n\n  yield takeEvery(actionTypes.RESET_CARDS_TIMEOUT, function* () {\n    yield delay(1000);\n    yield put(actions.resetCards());\n  });\n}\n\nexport default function* rootSaga() {\n  yield all([watchDeck(), watchCard()]);\n}\n"]},"metadata":{},"sourceType":"module"}