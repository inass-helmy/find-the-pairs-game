{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nexport function createDeck() {\n  return {\n    type: actionTypes.CREATE_DECK\n  };\n}\nexport function hideCards() {\n  return {\n    type: actionTypes.HIDE_CARDS\n  };\n}\nexport function startGame() {\n  return {\n    type: actionTypes.START_GAME\n  };\n}\nexport function flipCard(index, id) {\n  return {\n    type: actionTypes.FLIP_CARD,\n    index,\n    id\n  };\n}\nexport function setNoOfPairs(number) {\n  return {\n    type: actionTypes.SET_NO_OF_PAIRS,\n    number\n  };\n}\nexport function setMatchedCards(index) {\n  return {\n    type: actionTypes.SET_MATCHED_CARDS,\n    index\n  };\n}\nexport function resetCardsTimeout() {\n  return {\n    type: actionTypes.RESET_CARDS_TIMEOUT\n  };\n}\nexport function matchedCards() {\n  return {\n    type: actionTypes.MATCHED_CARDS\n  };\n}\nexport function resetCards() {\n  return {\n    type: actionTypes.RESET_CARDS\n  };\n}\nexport function restartGame() {\n  return {\n    type: actionTypes.RESTART_GAME\n  };\n}","map":{"version":3,"sources":["/Users/enassamir/Desktop/find-the-pairs-game/src/store/actions/Deck.js"],"names":["actionTypes","createDeck","type","CREATE_DECK","hideCards","HIDE_CARDS","startGame","START_GAME","flipCard","index","id","FLIP_CARD","setNoOfPairs","number","SET_NO_OF_PAIRS","setMatchedCards","SET_MATCHED_CARDS","resetCardsTimeout","RESET_CARDS_TIMEOUT","matchedCards","MATCHED_CARDS","resetCards","RESET_CARDS","restartGame","RESTART_GAME"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAO;AAAEC,IAAAA,IAAI,EAAEF,WAAW,CAACG;AAApB,GAAP;AACD;AAED,OAAO,SAASC,SAAT,GAAqB;AAC1B,SAAO;AAAEF,IAAAA,IAAI,EAAEF,WAAW,CAACK;AAApB,GAAP;AACD;AAED,OAAO,SAASC,SAAT,GAAqB;AAC1B,SAAO;AAAEJ,IAAAA,IAAI,EAAEF,WAAW,CAACO;AAApB,GAAP;AACD;AAED,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,EAAzB,EAA6B;AAClC,SAAO;AAAER,IAAAA,IAAI,EAAEF,WAAW,CAACW,SAApB;AAA+BF,IAAAA,KAA/B;AAAsCC,IAAAA;AAAtC,GAAP;AACD;AAED,OAAO,SAASE,YAAT,CAAsBC,MAAtB,EAA8B;AACnC,SAAO;AAAEX,IAAAA,IAAI,EAAEF,WAAW,CAACc,eAApB;AAAqCD,IAAAA;AAArC,GAAP;AACD;AAED,OAAO,SAASE,eAAT,CAAyBN,KAAzB,EAAgC;AACrC,SAAO;AAAEP,IAAAA,IAAI,EAAEF,WAAW,CAACgB,iBAApB;AAAuCP,IAAAA;AAAvC,GAAP;AACD;AAED,OAAO,SAASQ,iBAAT,GAA6B;AAClC,SAAO;AAAEf,IAAAA,IAAI,EAAEF,WAAW,CAACkB;AAApB,GAAP;AACD;AAED,OAAO,SAASC,YAAT,GAAwB;AAC7B,SAAO;AAAEjB,IAAAA,IAAI,EAAEF,WAAW,CAACoB;AAApB,GAAP;AACD;AAED,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAO;AAAEnB,IAAAA,IAAI,EAAEF,WAAW,CAACsB;AAApB,GAAP;AACD;AAED,OAAO,SAASC,WAAT,GAAuB;AAC5B,SAAO;AAAErB,IAAAA,IAAI,EAAEF,WAAW,CAACwB;AAApB,GAAP;AACD","sourcesContent":["import * as actionTypes from \"./actionTypes\";\n\nexport function createDeck() {\n  return { type: actionTypes.CREATE_DECK };\n}\n\nexport function hideCards() {\n  return { type: actionTypes.HIDE_CARDS };\n}\n\nexport function startGame() {\n  return { type: actionTypes.START_GAME };\n}\n\nexport function flipCard(index, id) {\n  return { type: actionTypes.FLIP_CARD, index, id };\n}\n\nexport function setNoOfPairs(number) {\n  return { type: actionTypes.SET_NO_OF_PAIRS, number };\n}\n\nexport function setMatchedCards(index) {\n  return { type: actionTypes.SET_MATCHED_CARDS, index };\n}\n\nexport function resetCardsTimeout() {\n  return { type: actionTypes.RESET_CARDS_TIMEOUT };\n}\n\nexport function matchedCards() {\n  return { type: actionTypes.MATCHED_CARDS };\n}\n\nexport function resetCards() {\n  return { type: actionTypes.RESET_CARDS };\n}\n\nexport function restartGame() {\n  return { type: actionTypes.RESTART_GAME };\n}\n"]},"metadata":{},"sourceType":"module"}