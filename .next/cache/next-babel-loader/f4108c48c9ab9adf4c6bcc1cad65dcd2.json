{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport Deck from \"./reducers/Deck\";\nimport rootSaga from \"./sagas/Deck\";\n\nvar makeStore = function makeStore(context) {\n  var sagaMiddleware = createSagaMiddleware();\n  var store = createStore(Deck, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(makeStore);\nexport default wrapper;","map":{"version":3,"sources":["/Users/enassamir/Desktop/find-the-pairs-game/src/store/index.js"],"names":["applyMiddleware","createStore","composeWithDevTools","createSagaMiddleware","createWrapper","Deck","rootSaga","makeStore","context","sagaMiddleware","store","sagaTask","run","wrapper"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,QAAP,MAAqB,cAArB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAa;AAC7B,MAAMC,cAAc,GAAGN,oBAAoB,EAA3C;AACA,MAAMO,KAAK,GAAGT,WAAW,CAACI,IAAD,EAAOH,mBAAmB,CAACF,eAAe,CAACS,cAAD,CAAhB,CAA1B,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBF,cAAc,CAACG,GAAf,CAAmBN,QAAnB,CAAjB;AACA,SAAOI,KAAP;AACD,CALD;;AAMA,IAAMG,OAAO,GAAGT,aAAa,CAACG,SAAD,CAA7B;AAEA,eAAeM,OAAf","sourcesContent":["import { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport createSagaMiddleware from \"redux-saga\";\nimport { createWrapper } from \"next-redux-wrapper\";\n\nimport Deck from \"./reducers/Deck\";\nimport rootSaga from \"./sagas/Deck\";\n\nconst makeStore = (context) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(Deck, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nconst wrapper = createWrapper(makeStore);\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}