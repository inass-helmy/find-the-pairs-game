{"ast":null,"code":"import { all, put, takeLatest, delay, takeEvery } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport * as actionTypes from \"../actions/actionTypes\";\nexport function* watchDeck() {\n  yield takeLatest(actionTypes.START_GAME, function* () {\n    yield put(actions.createDeck());\n    yield delay(5000);\n    yield put(actions.hideCards());\n  });\n}\nexport function* watchCard() {\n  yield takeEvery(actionTypes.SET_MATCHED_CARDS, function* () {\n    yield delay(1000);\n    yield put(actions.matchedCards());\n  });\n  yield takeEvery(actionTypes.RESET_CARDS_TIMEOUT, function* () {\n    yield delay(1000);\n    yield put(actions.resetCards());\n  });\n}\nexport default function* rootSaga() {\n  yield all([watchDeck(), watchCard()]);\n}","map":{"version":3,"sources":["/Users/enassamir/Desktop/find-the-pairs-game/src/store/sagas/Deck.js"],"names":["all","put","takeLatest","delay","takeEvery","actions","actionTypes","watchDeck","START_GAME","createDeck","hideCards","watchCard","SET_MATCHED_CARDS","matchedCards","RESET_CARDS_TIMEOUT","resetCards","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,EAA+BC,KAA/B,EAAsCC,SAAtC,QAAuD,oBAAvD;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AAEA,OAAO,UAAUC,SAAV,GAAsB;AAC3B,QAAML,UAAU,CAACI,WAAW,CAACE,UAAb,EAAyB,aAAa;AACpD,UAAMP,GAAG,CAACI,OAAO,CAACI,UAAR,EAAD,CAAT;AACA,UAAMN,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAACI,OAAO,CAACK,SAAR,EAAD,CAAT;AACD,GAJe,CAAhB;AAKD;AAED,OAAO,UAAUC,SAAV,GAAsB;AAC3B,QAAMP,SAAS,CAACE,WAAW,CAACM,iBAAb,EAAgC,aAAa;AAC1D,UAAMT,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAACI,OAAO,CAACQ,YAAR,EAAD,CAAT;AACD,GAHc,CAAf;AAKA,QAAMT,SAAS,CAACE,WAAW,CAACQ,mBAAb,EAAkC,aAAa;AAC5D,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAACI,OAAO,CAACU,UAAR,EAAD,CAAT;AACD,GAHc,CAAf;AAID;AAED,eAAe,UAAUC,QAAV,GAAqB;AAClC,QAAMhB,GAAG,CAAC,CAACO,SAAS,EAAV,EAAcI,SAAS,EAAvB,CAAD,CAAT;AACD","sourcesContent":["import { all, put, takeLatest, delay, takeEvery } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport * as actionTypes from \"../actions/actionTypes\";\n\nexport function* watchDeck() {\n  yield takeLatest(actionTypes.START_GAME, function* () {\n    yield put(actions.createDeck());\n    yield delay(5000);\n    yield put(actions.hideCards());\n  });\n}\n\nexport function* watchCard() {\n  yield takeEvery(actionTypes.SET_MATCHED_CARDS, function* () {\n    yield delay(1000);\n    yield put(actions.matchedCards());\n  });\n\n  yield takeEvery(actionTypes.RESET_CARDS_TIMEOUT, function* () {\n    yield delay(1000);\n    yield put(actions.resetCards());\n  });\n}\n\nexport default function* rootSaga() {\n  yield all([watchDeck(), watchCard()]);\n}\n"]},"metadata":{},"sourceType":"module"}